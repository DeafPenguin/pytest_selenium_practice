{"name": "test_interactWithPage", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\".//tr[1]/td[2]\"}\n  (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x5d8d9c1c5c7a <unknown>\n#1 0x5d8d9bea8e2c <unknown>\n#2 0x5d8d9bef5661 <unknown>\n#3 0x5d8d9bef5751 <unknown>\n#4 0x5d8d9bee9bf6 <unknown>\n#5 0x5d8d9bf185ed <unknown>\n#6 0x5d8d9bee9ad9 <unknown>\n#7 0x5d8d9bf1878e <unknown>\n#8 0x5d8d9bf37303 <unknown>\n#9 0x5d8d9bf18363 <unknown>\n#10 0x5d8d9bee8247 <unknown>\n#11 0x5d8d9bee8b9e <unknown>\n#12 0x5d8d9c18c24b <unknown>\n#13 0x5d8d9c1902f1 <unknown>\n#14 0x5d8d9c177afe <unknown>\n#15 0x5d8d9c190e52 <unknown>\n#16 0x5d8d9c15c79f <unknown>\n#17 0x5d8d9c1b5638 <unknown>\n#18 0x5d8d9c1b5810 <unknown>\n#19 0x5d8d9c1c4dac <unknown>\n#20 0x74e0eda94ac3 <unknown>", "trace": "browserChrome = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"798da5086fc270cd09395ce6e6ebba1e\")>\n\n    def test_interactWithPage(browserChrome):\n        testAutomationPracticePage = TestAutomationPracticePage(browserChrome)\n        testAutomationPracticePage.load()\n    \n        # Validating header\n        testAutomationPracticePage.validateElementText(\n            testAutomationPracticePage.headerInner,\n            \"Automation Testing Practice\"\n        )\n    \n        # Selecting Tuesday on list\n        testAutomationPracticePage.selectDayOfList(3)\n    \n>       testAutomationPracticePage.validateCellContent(\n            testAutomationPracticePage.webTable,\n            2,\n            1,\n            'Amit'\n        )\n\ntap_full.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../commonElements/tables.py:30: in validateCellContent\n    elementText = self.getTableCellElementText(\n../commonElements/tables.py:22: in getTableCellElementText\n    element = self.getTableCellElement(\n../commonElements/tables.py:16: in getTableCellElement\n    cell_element = tableElement.find_element(\n../myenv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:417: in find_element\n    return self._execute(Command.FIND_CHILD_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../myenv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../myenv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x76d1bf691090>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#18 0x5d8d9c1b5810 \\\\u003Cunknown>\\\\n#19 0x5d8d9c1c4dac \\\\u003Cunknown>\\\\n#20 0x74e0eda94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\".//tr[1]/td[2]\"}\nE         (Session info: chrome=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x5d8d9c1c5c7a <unknown>\nE       #1 0x5d8d9bea8e2c <unknown>\nE       #2 0x5d8d9bef5661 <unknown>\nE       #3 0x5d8d9bef5751 <unknown>\nE       #4 0x5d8d9bee9bf6 <unknown>\nE       #5 0x5d8d9bf185ed <unknown>\nE       #6 0x5d8d9bee9ad9 <unknown>\nE       #7 0x5d8d9bf1878e <unknown>\nE       #8 0x5d8d9bf37303 <unknown>\nE       #9 0x5d8d9bf18363 <unknown>\nE       #10 0x5d8d9bee8247 <unknown>\nE       #11 0x5d8d9bee8b9e <unknown>\nE       #12 0x5d8d9c18c24b <unknown>\nE       #13 0x5d8d9c1902f1 <unknown>\nE       #14 0x5d8d9c177afe <unknown>\nE       #15 0x5d8d9c190e52 <unknown>\nE       #16 0x5d8d9c15c79f <unknown>\nE       #17 0x5d8d9c1b5638 <unknown>\nE       #18 0x5d8d9c1b5810 <unknown>\nE       #19 0x5d8d9c1c4dac <unknown>\nE       #20 0x74e0eda94ac3 <unknown>\n\n../myenv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException"}, "start": 1720006434802, "stop": 1720006439589, "uuid": "5106e0dc-584d-4b52-8c1c-e24ccf5c1996", "historyId": "a94fa960d03252e19068b17e2048b5db", "testCaseId": "a94fa960d03252e19068b17e2048b5db", "fullName": "e2e_tests.tap_full#test_interactWithPage", "labels": [{"name": "parentSuite", "value": "e2e_tests"}, {"name": "suite", "value": "tap_full"}, {"name": "host", "value": "ENCSABCAMLT0895"}, {"name": "thread", "value": "11080-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2e_tests.tap_full"}]}